# font_family       Fira Code
# font_family       Iosevka
# font_family       Atkinson Hyperlegible
# font_family       JetBrains Mono
font_family       JetBrainsMono Nerd Font Mono
# font_family       FiraCode Nerd Font
# font_family         Hack
# font_family         Hack Nerd Font //no italics
# font_family         VictorMono Nerd Font
# italic_font      JetBrains Mono Italic
# italic_font      JetBrainsMono Nerd Font
# italic_font         Hack
# bold_font                       FiraCode-Bold
# bold_font      JetBrainsMono Nerd Font
# # bold_font                       FiraCode-Bold
# # bold_font                       Fira Code
# bold_font                        Hack
# bold_font                         JetBrains Mono Bold
# bold_font                         Atkinson Hyperlegible
font_size                       11.3
# font_size                       10.5
disable_ligatures               never


adjust_line_height  1
disable_ligatures never

cursor_shape beam

# Mouse:
copy_on_select yes

enable_audio_bell no
# enabled_layouts *
enabled_layouts tall, stack

window_border_width 1.5


window_margin_width 2.0

window_padding_width 2.0

tab_bar_edge bottom


tab_bar_margin_width 2.0

tab_bar_style powerline
tab_powerline_style round


tab_title_template "{index}: {title[title.rfind('/')+1:]}"  

# active_tab_background   #7e9cd8
 active_tab_font_style   bold
# inactive_tab_foreground #fEFEFE
# inactive_tab_background #222222
inactive_tab_font_style normal


# background_opacity 0.94
background_opacity 0.92
# background_opacity 0.90


dynamic_background_opacity yes

allow_remote_control yes
listen_on unix:/tmp/kitty_remote_control

kitty_mod ctrl+shift


map kitty_mod+b pass_selection_to_program brave-browser

# map kitty_mod+up        scroll_line_up
map kitty_mod+k         scroll_line_up
 map kitty_mod+j         scroll_line_down
# map kitty_mod+page_up   scroll_page_up
# map kitty_mod+page_down scroll_page_down
# map kitty_mod+home      scroll_home
# map kitty_mod+end       scroll_end
map kitty_mod+h         show_scrollback

#: You can pipe the contents of the current screen + history buffer as
#: STDIN to an arbitrary program using the ``launch`` function. For
#: example, the following opens the scrollback buffer in less in an
#: overlay window::

map f1 launch --stdin-source=@screen_scrollback --stdin-add-formatting --type=overlay less +G -R

#: For more details on piping screen and buffer contents to external
#: programs, see launch.

#: }}}

#: Window management {{{

map alt+enter new_window_with_cwd

#: You can open a new window running an arbitrary program, for
#: example::

#:     map kitty_mod+y      launch mutt

#: You can open a new window with the current working directory set to
#: the working directory of the current window using::

#:     map ctrl+alt+enter    launch --cwd=current

#: You can open a new window that is allowed to control kitty via the
#: kitty remote control facility by prefixing the command line with @.
#: Any programs running in that window will be allowed to control
#: kitty. For example::

#:     map ctrl+enter launch --allow-remote-control some_program

#: You can open a new window next to the currently active window or as
#: the first window, with::

#:     map ctrl+n launch --location=neighbor some_program
#:     map ctrl+f launch --location=first some_program

#: For more details, see launch.

# map kitty_mod+n new_os_window

#: Works like new_window above, except that it opens a top level OS
#: kitty window. In particular you can use new_os_window_with_cwd to
#: open a window with the current working directory.

# map kitty_mod+w close_window
# map kitty_mod+] next_window
# map kitty_mod+[ previous_window
# map kitty_mod+f move_window_forward
# map kitty_mod+b move_window_backward
# map kitty_mod+` move_window_to_top
# map kitty_mod+r start_resizing_window
# map kitty_mod+1 first_window
# map kitty_mod+2 second_window
# map kitty_mod+3 third_window
# map kitty_mod+4 fourth_window
# map kitty_mod+5 fifth_window
# map kitty_mod+6 sixth_window
# map kitty_mod+7 seventh_window
# map kitty_mod+8 eighth_window
# map kitty_mod+9 ninth_window
# map kitty_mod+0 tenth_window
#: }}}

#: Tab management {{{

# map kitty_mod+right next_tab
# map kitty_mod+left previous_tab
# map ctrl+shift+l   next_tab
# map ctrl+shift+h  previous_tab
# map alt+t     new_tab
# map alt+w     close_tab
map kitty_mod+alt+l     move_tab_forward
map kitty_mod+alt+h     move_tab_backward

#: You can also create shortcuts to go to specific tabs, with 1 being
#: the first tab, 2 the second tab and -1 being the previously active
#: tab::

#:     map ctrl+alt+1 goto_tab 1
#:     map ctrl+alt+2 goto_tab 2

#: Just as with new_window above, you can also pass the name of
#: arbitrary commands to run when using new_tab and use
#: new_tab_with_cwd. Finally, if you want the new tab to open next to
#: the current tab rather than at the end of the tabs list, use::

#:     map ctrl+t new_tab !neighbor [optional cmd to run]
#: }}}

#: Layout management {{{


#: You can also create shortcuts to switch to specific layouts::

#:     map ctrl+alt+t goto_layout tall
#:     map ctrl+alt+s goto_layout stack

#: Similarly, to switch back to the previous layout::

#:    map ctrl+alt+p last_used_layout
#: }}}

#: Font sizes {{{

#: You can change the font size for all top-level kitty OS windows at
#: a time or only the current one.

map kitty_mod+F6     change_font_size all +2.0
map kitty_mod+F5     change_font_size all -2.0
# map kitty_mod+backspace change_font_size all 0

#: To setup shortcuts for specific font sizes::

#:     map kitty_mod+f6 change_font_size all 10.0

#: To setup shortcuts to change only the current OS window's font
#: size::

#:     map kitty_mod+f6 change_font_size current 10.0
#: }}}

#: Select and act on visible text {{{

#: Use the hints kitten to select text and either pass it to an
#: external program or insert it into the terminal or copy it to the
#: clipboard.

# map kitty_mod+e kitten hints

#: Open a currently visible URL using the keyboard. The program used
#: to open the URL is specified in open_url_with.
map ctrl+alt+u open_url_with_hints

# map kitty_mod+p>f kitten hints --type path --program -

#: Select a path/filename and insert it into the terminal. Useful, for
#: instance to run git commands on a filename output from a previous
#: git command.

# map kitty_mod+p>shift+f kitten hints --type path

#: Select a path/filename and open it with the default open program.

# map kitty_mod+p>l kitten hints --type line --program -

#: Select a line of text and insert it into the terminal. Use for the
#: output of things like: ls -1

# map kitty_mod+p>w kitten hints --type word --program -

#: Select words and insert into terminal.

# map kitty_mod+p>h kitten hints --type hash --program -

#: Select something that looks like a hash and insert it into the
#: terminal. Useful with git, which uses sha1 hashes to identify
#: commits


#: The hints kitten has many more modes of operation that you can map
#: to different shortcuts. For a full description see kittens/hints.
#: }}}

#: Miscellaneous {{{

# map kitty_mod+f11    toggle_fullscreen
# map kitty_mod+f10    toggle_maximized
# map kitty_mod+u      kitten unicode_input
# map kitty_mod+f2     edit_config_file
# map kitty_mod+escape kitty_shell window

#: Open the kitty shell in a new window/tab/overlay/os_window to
#: control kitty using commands.

map kitty_mod+[    set_background_opacity 1
map kitty_mod+]    set_background_opacity 0.92
map kitty_mod+alt+=    set_font_size 11.5
map kitty_mod+alt+-    set_font_size 10.5
# map kitty_mod+a>1    set_background_opacity 1
# map kitty_mod+a>d    set_background_opacity default
# map kitty_mod+delete clear_terminal reset active

#: You can create shortcuts to clear/reset the terminal. For example::

#:     # Reset the terminal
#:     map kitty_mod+f9 clear_terminal reset active
#:     # Clear the terminal screen by erasing all contents
#:     map kitty_mod+f10 clear_terminal clear active
#:     # Clear the terminal scrollback by erasing it
#:     map kitty_mod+f11 clear_terminal scrollback active
#:     # Scroll the contents of the screen into the scrollback
#:     map kitty_mod+f12 clear_terminal scroll active

#: If you want to operate on all windows instead of just the current
#: one, use all instead of active.

#: It is also possible to remap Ctrl+L to both scroll the current
#: screen contents into the scrollback buffer and clear the screen,
#: instead of just clearing the screen::

#:     map ctrl+l combine : clear_terminal scroll active : send_text normal,application \x0c


#: You can tell kitty to send arbitrary (UTF-8) encoded text to the
#: client program when pressing specified shortcut keys. For example::

#:     map ctrl+alt+a send_text all Special text

#: This will send "Special text" when you press the ctrl+alt+a key
#: combination.  The text to be sent is a python string literal so you
#: can use escapes like \x1b to send control codes or \u21fb to send
#: unicode characters (or you can just input the unicode characters
#: directly as UTF-8 text). The first argument to send_text is the
#: keyboard modes in which to activate the shortcut. The possible
#: values are normal or application or kitty or a comma separated
#: combination of them.  The special keyword all means all modes. The
#: modes normal and application refer to the DECCKM cursor key mode
#: for terminals, and kitty refers to the special kitty extended
#: keyboard protocol.

#: Another example, that outputs a word and then moves the cursor to
#: the start of the line (same as pressing the Home key)::

#:     map ctrl+alt+a send_text normal Word\x1b[H
#:     map ctrl+alt+a send_text application Word\x1bOH

#: }}}

map alt+ยบ new_tab_with_cwd


# map alt+p new_tab_with_cwd
map alt+h previous_window
map alt+l next_window
map alt+k previous_window
map kitty_mod+right resize_window narrower 4
map kitty_mod+left resize_window wider 4
map kitty_mod+up resize_window taller 4
map kitty_mod+down resize_window shorter 4
map kitty_mod+i set_tab_title
#
# map kitty_mod+space show_scrollback
#
#
#
# map alt+1 goto_tab 1
# map alt+2 goto_tab 2
# map alt+3 goto_tab 3
# map alt+4 goto_tab 4
# map alt+5 goto_tab 5
# map alt+6 goto_tab 6
# map alt+7 goto_tab 7
# map alt+8 goto_tab 8
# map alt+9 goto_tab 9

map alt+r next_layout

# map alt+space launch --allow-remote-control ~/.config/kitty/fzf-tabs-kitty.sh

# Intento de workorund para tmux
map ctrl+space send_text all \x00


# }}}


# BEGIN_KITTY_THEME
# zenwritten_dark
include current-theme.conf
# END_KITTY_THEME

