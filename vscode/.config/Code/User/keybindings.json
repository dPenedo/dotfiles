//TODO: no funciona bien. copiar previo del git y ordenarlo un poco
[
    // Navigate splits
    {
        "key": "ctrl+k",
        "command": "workbench.action.navigateUp",
        "when": "vim.active && vim.mode!='Insert'"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.files.action.focusOpenEditorsView",
        "when": "filesExplorerFocus && vim.active && vim.mode!='Insert'"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.navigateDown",
        "when": "vim.active && vim.mode!='Insert'"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.files.action.focusFilesExplorer",
        "when": "!editorFocus && workbench.explorer.openEditorsView.active && vim.active && vim.mode!='Insert'"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft",
        "when": "vim.active && vim.mode!='Insert'"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight",
        "when": "vim.active && vim.mode!='Insert'&& !terminalFocus"
    },
    // {
    //     "key": "ctrl+right",
    //     "command": "workbench.action.increaseViewWidth",
    //     "when": "editorTextFocus"
    // },
    // {
    //     "key": "ctrl+left",
    //     "command": "workbench.action.decreaseViewWidth",
    //     "when": "editorTextFocus"
    // },
    // {
    //     "key": "ctrl+down",
    //     "command": "workbench.action.increaseViewHeight",
    //     "when": "editorTextFocus"
    // },
    // {
    //     "key": "ctrl+up",
    //     "command": "workbench.action.decreaseViewHeight",
    //     "when": "editorTextFocus"
    // },
    // Actions
    {
        "key": "ctrl+f f",
        "command": "prettier.forceFormatDocument"
    },
    {
        "key": "ctrl+f r",
        "command": "editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen"
    },
    // copy
    {
        "key": "ctrl+c",
        "command": "vim.remap",
        "when": "inputFocus && vim.mode == 'Normal'",
        "args": {
            "after": [
                "y",
                "y"
            ]
        }
    },
    {
        "key": "ctrl+v",
        "command": "-editor.action.clipboardPasteAction"
    },
    // Terminal
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight",
        "when": "vim.active && vim.mode!='Insert'&& !terminalFocus"
    },
    // File Explorer
    {
        "key": "a",
        "command": "explorer.newFile",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "key": "d",
        "command": "filesExplorer.cut",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "key": "p",
        "command": "filesExplorer.paste",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "key": "r",
        "command": "renameFile",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "key": "shift+a",
        "command": "explorer.newFolder",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "key": "e",
        "command": "workbench.files.action.collapseExplorerFolders",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "key": "shift+d",
        "command": "deleteFile",
        "when": "filesExplorerFocus && !inputFocus"
    },
    // Miscellaneous
    {
        "key": "ctrl+j",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+k",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+y",
        "command": "acceptSelectedSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+alt+e",
        "command": "workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
        "key": "ctrl+alt+p",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "ctrl+shift+alt+down",
        "command": "-editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+alt+up",
        "command": "-editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+alt+q",
        "command": "workbench.action.quit"
    },
    {
        "key": "ctrl+shift+alt+t",
        "command": "workbench.action.hideEditorTabs"
    },
    {
        "key": "ctrl+shift+e",
        "command": "-workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
        "key": "ctrl+shift+p",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "alt+f8",
        "command": "-editor.action.marker.next",
        "when": "editorFocus"
    },
    {
        "key": "alt+e",
        "command": "workbench.files.action.focusFilesExplorer"
    },
    {
        "key": "alt+t",
        "command": "workbench.view.extension.todo-tree-container"
    },
    {
        "before": [
            "j",
            "k"
        ],
        "after": [
            "<Esc>",
            "l",
            "a"
        ]
    },
    // Vim Normal Mode Key Bindings
    {
        "before": [
            "<leader>",
            "s",
            "a"
        ],
        "commands": [
            "editor.action.selectAll"
        ],
        "when": "editorFocus && vim.mode == 'Normal'"
    },
    {
        "before": [
            "<leader>",
            "w"
        ],
        "commands": [
            "workbench.action.files.save"
        ],
        "when": "editorFocus && vim.mode == 'Normal'"
    },
    {
        "before": [
            "<leader>",
            "e"
        ],
        "commands": [
            "workbench.action.focusSideBar"
        ],
        "when": "editorFocus && vim.mode == 'Normal'"
    },
    {
        "before": [
            "<leader>",
            "q"
        ],
        "command": "workbench.action.closeEditorsInGroup",
        "when": "editorFocus && vim.mode == 'Normal'"
    },
    {
        "before": [
            "<leader>",
            ";"
        ],
        "after": "m`A;<Esc>``",
        "when": "editorTextFocus && vim.mode == 'Normal'",
    },
    {
        "before": "'",
        "after": "`",
    },
    {
        "before": [
            "<Esc>"
        ],
        "commands": [
            ":nohl"
        ],
        "when": "editorFocus && vim.mode == 'Normal'"
    },
    {
        "before": [
            "<leader>",
            "s",
            "v"
        ],
        "commands": [
            "workbench.action.splitEditor"
        ],
        "when": "editorFocus && vim.mode == 'Normal'"
    },
    {
        "before": [
            "<leader>",
            "<Enter>"
        ],
        "commands": [
            "workbench.action.splitEditor"
        ],
        "when": "editorFocus && vim.mode == 'Normal'"
    },
    {
        "before": [
            "<leader>",
            "s",
            "h"
        ],
        "commands": [
            "workbench.action.splitEditorDown"
        ],
        "when": "editorFocus && vim.mode == 'Normal'"
    },
    {
        "before": [
            "<leader>",
            "-"
        ],
        "commands": [
            "workbench.action.splitEditorDown"
        ],
        "when": "editorFocus && vim.mode == 'Normal'"
    },
    {
        "before": [
            "<leader>",
            "t",
            "o"
        ],
        "commands": [
            ":tabnew"
        ]
    },
    {
        "before": [
            "<leader>",
            "t",
            "x"
        ],
        "commands": [
            ":tabclose"
        ],
        "when": "editorFocus && vim.mode == 'Normal'"
    },
    {
        "before": [
            "<S-h>"
        ],
        "commands": [
            ":tabp"
        ],
        "when": "editorFocus && vim.mode == 'Normal'"
    },
    {
        "before": [
            "<S-l>"
        ],
        "commands": [
            ":tabnext"
        ],
        "when": "editorFocus && vim.mode == 'Normal'"
    },
    {
        "before": [
            "<leader>",
            "f"
        ],
        "commands": [
            "workbench.action.quickOpen"
        ],
        "when": "editorFocus && vim.mode == 'Normal'"
    },
    {
        "before": [
            "<leader>",
            "<leader>"
        ],
        "commands": [
            "workbench.action.showAllEditors"
        ],
        "when": "editorFocus && vim.mode == 'Normal'"
    },
    {
        "before": [
            "<leader>",
            "g"
        ],
        "commands": [
            "workbench.action.findInFiles"
        ],
        "when": "editorFocus && vim.mode == 'Normal'"
    },
    {
        "before": [
            "<leader>",
            "shift",
            "r"
        ],
        "commands": [
            "editor.action.rename"
        ],
        "when": "editorFocus && vim.mode == 'Normal'"
    },
    {
        "before": [
            "<leader>",
            "a",
            "f"
        ],
        "commands": [
            "editor.action.autoFix"
        ],
        "when": "editorFocus && vim.mode == 'Normal'"
    },
    {
        "before": [
            "<leader>",
            "r",
            "a"
        ],
        "commands": [
            "editor.action.rename"
        ],
        "when": "editorFocus && vim.mode == 'Normal'"
    },
    {
        "before": [
            "<leader>",
            "m",
            "m"
        ],
        "commands": [
            "editor.action.format"
        ],
        "when": "editorFocus && vim.mode == 'Normal'"
    },
    {
        "before": [
            "<leader>",
            "c",
            "a"
        ],
        "commands": [
            "editor.action.quickFix"
        ],
        "when": "editorFocus && vim.mode == 'Normal'"
    },
    {
        "before": [
            "<S-k>"
        ],
        "commands": [
            "editor.action.showHover"
        ]
    },
    {
        "before": [
            "<leader>",
            "l"
        ],
        "commands": [
            "fuzzySearch.activeTextEditor"
        ],
        "when": "editorFocus && vim.mode == 'Normal'"
    },
    {
        "before": [
            "g",
            "g"
        ],
        "commands": [
            ":1"
        ],
        "when": "editorFocus && vim.mode == 'Normal'"
    },
    // Vim Visual Mode Key Bindings
    {
        "before": [
            ">"
        ],
        "commands": [
            "editor.action.indentLines"
        ],
        "when": "editorFocus && vim.mode == 'Visual'"
    },
    {
        "before": [
            "<"
        ],
        "commands": [
            "editor.action.outdentLines"
        ],
        "when": "editorFocus && vim.mode == 'Visual'"
    },
    {
        "key": "alt+s",
        "command": "java.debug.runJavaFile"
    },
    {
        "key": "shift+space",
        "command": "workbench.action.showAllEditorsByMostRecentlyUsed"
    },
    {
        "key": "ctrl+w q",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+alt+l",
        "command": "workbench.action.increaseViewWidth"
    },
    {
        "key": "ctrl+alt+j",
        "command": "workbench.action.increaseViewHeight"
    },
    {
        "key": "ctrl+alt+k",
        "command": "workbench.action.decreaseViewHeight"
    },
    {
        "key": "ctrl+alt+h",
        "command": "workbench.action.decreaseViewWidth"
    },
    {
        "key": "alt+f",
        "command": "workbench.action.toggleMaximizedPanel",
        "when": "panelAlignment == 'center' || panelPosition != 'bottom'"
    },
    {
        "key": "alt+f",
        "command": "workbench.action.toggleMaximizeEditorGroup",
        "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
    },
    {
        "key": "ctrl+k ctrl+m",
        "command": "-workbench.action.toggleMaximizeEditorGroup",
        "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
    },
]