local ls = require("luasnip")
local s = ls.snippet
local t = ls.text_node
local i = ls.insert_node

return {
  s("autoescape", {
    t({ "{% autoescape " }),
    i(1, "off"),
    t({ " %}" }),
    t({ "", "\t" }),
    i(2),
    t({ "", "{% endautoescape %}", "" }),
  }),
  s("block", {
    t({ "{% block " }),
    i(1, "blockname"),
    t({ " %}" }),
    t({ "", "\t" }),
    i(2),
    t({ "", "{% endblock " }),
    i(1, "blockname"),
    t({ " %}", "" }),
  }),
  s("blocktrans", {
    t({ "{% blocktrans %}" }),
    t({ "", "\t" }),
    i(1),
    t({ "", "{% endblocktrans %}", "" }),
  }),
  s("comment", {
    t({ "{% comment %}" }),
    t({ "", "\t" }),
    i(1),
    t({ "", "{% endcomment %}", "" }),
  }),
  s("var", {
    t("{{ "),
    i(1),
    t(" }}"),
  }),
  s("csrf", {
    t("{% csrf_token %}"),
  }),
  s("cycle", {
    t("{% cycle "),
    i(1),
    t(" %}"),
  }),
  s("debug", {
    t("{% debug %}"),
  }),
  s("elif", {
    t("{% elif %}"),
  }),
  s("else", {
    t("{% else %}"),
  }),
  s("ext", {
    t("{% extends '"),
    i(1),
    t("' %}"),
  }),
  s("extends", {
    t("{% extends '"),
    i(1),
    t("' %}"),
  }),
  s("extrahead", {
    t({ "{% block extrahead %}" }),
    t({ "", "\t" }),
    i(1),
    t({ "", "{% endblock extrahead %}", "" }),
  }),
  s("extrastyle", {
    t({ "{% block extrastyle %}" }),
    t({ "", "\t" }),
    i(1),
    t({ "", "{% endblock extrastyle %}", "" }),
  }),
  s("filter", {
    t({ "{% filter " }),
    i(1),
    t({ " %}" }),
    t({ "", "\t" }),
    i(2),
    t({ "", "{% endfilter %}", "" }),
  }),
  s("firstof", {
    t("{% firstof "),
    i(1),
    t(" %}"),
  }),
  s("for", {
    t({ "{% for " }),
    i(1),
    t(" in "),
    i(2),
    t({ " %}" }),
    t({ "", "\t" }),
    i(3),
    t({ "", "{% endfor %}", "" }),
  }),
  s("fore", {
    t({ "{% for " }),
    i(1),
    t(" in "),
    i(2),
    t({ " %}" }),
    t({ "", "\t" }),
    i(3),
    t({ "", "{% empty %}" }),
    t({ "", "\t" }),
    i(4),
    t({ "", "{% endfor %}", "" }),
  }),
  s("iblock", {
    t("{% block "),
    i(1, "blockname"),
    t(" %}"),
    i(2),
    t("{% endblock "),
    i(1, "blockname"),
    t(" %}"),
  }),
  s("if", {
    t({ "{% if " }),
    i(1),
    t({ " %}" }),
    t({ "", "\t" }),
    i(2),
    t({ "", "{% endif %}", "" }),
  }),
  s("ifchanged", {
    t({ "{% ifchanged " }),
    i(1),
    t({ " %}" }),
    t({ "", "\t" }),
    i(2),
    t({ "", "{% endifchanged %}", "" }),
  }),
  s("ife", {
    t({ "{% if " }),
    i(1),
    t({ " %}" }),
    t({ "", "\t" }),
    i(2),
    t({ "", "{% else %}" }),
    t({ "", "\t" }),
    i(3),
    t({ "", "{% endif %}", "" }),
  }),
  s("ifelse", {
    t({ "{% if " }),
    i(1),
    t({ " %}" }),
    t({ "", "\t" }),
    i(2),
    t({ "", "{% else %}" }),
    t({ "", "\t" }),
    i(3),
    t({ "", "{% endif %}", "" }),
  }),
  s("ifeq", {
    t({ "{% ifequal " }),
    i(1),
    t(" "),
    i(2),
    t({ " %}" }),
    t({ "", "\t" }),
    i(3),
    t({ "", "{% endifequal %}", "" }),
  }),
  s("ifequal", {
    t({ "{% ifequal " }),
    i(1),
    t(" "),
    i(2),
    t({ " %}" }),
    t({ "", "\t" }),
    i(3),
    t({ "", "{% endifequal %}", "" }),
  }),
  s("ifnotequal", {
    t({ "{% ifnotequal " }),
    i(1),
    t(" "),
    i(2),
    t({ " %}" }),
    t({ "", "\t" }),
    i(3),
    t({ "", "{% endifnotequal %}", "" }),
  }),
  s("inc", {
    t("{% include "),
    i(1, "'"),
    i(2),
    t("' %}"),
  }),
  s("include", {
    t("{% include "),
    i(1, "'"),
    i(2),
    t("' %}"),
  }),
  s("load", {
    t("{% load "),
    i(1),
    t(" %}"),
  }),
  s("media", {
    t("{{ MEDIA_URL }}"),
  }),
  s("now", {
    t("{% now '"),
    i(1),
    t("' %}"),
  }),
  s("regroup", {
    t("{% regroup "),
    i(1),
    t(" by "),
    i(2),
    t(" as "),
    i(3),
    t(" %}"),
  }),
  s("spaceless", {
    t({ "{% spaceless %}" }),
    t({ "", "\t" }),
    i(1),
    t({ "", "{% endspaceless %}", "" }),
  }),
  s("ssi", {
    t("{% ssi "),
    i(1),
    t(" "),
    i(2, "parsed"),
    t(" %}"),
  }),
  s("static", {
    t("{% static '"),
    i(1),
    t("' %}"),
  }),
  s("staticu", {
    t("{{ STATIC_URL }}"),
  }),
  s("super", {
    t("{{ block.super }}"),
  }),
  s("tag", {
    t("{% "),
    i(1),
    t(" %}"),
  }),
  s("templatetag", {
    t("{% templatetag "),
    i(1),
    t(" %}"),
  }),
  s("trans", {
    t("{% trans '"),
    i(1),
    t("' %}"),
  }),
  s("url", {
    t("{% url "),
    i(1),
    t(" %}"),
  }),
  s("verbatim", {
    t({ "{% verbatim %}" }),
    t({ "", "\t" }),
    i(1),
    t({ "", "{% endverbatim %}", "" }),
  }),
  s("widthratio", {
    t("{% widthratio "),
    i(1, "this_value"),
    t(" "),
    i(2, "max_value"),
    t(" "),
    i(3, "100"),
    t(" %}"),
  }),
  s("with", {
    t({ "{% with " }),
    i(1),
    t(" as "),
    i(2),
    t({ " %}" }),
    t({ "", "\t" }),
    i(3),
    t({ "", "{% endwith %}", "" }),
  }),
}
